#!/usr/bin/env python3
import os
import shlex
import subprocess
import sys


class Command(object):
    def __init__(self, function, short_help):
        self.function = function
        self.short_help = short_help


class Alias(Command):
    def __init__(self, command, name):
        super().__init__(command.function, "alias of '{}'".format(name))


def print_info(message):
    print("\033[96mdevbox \033[1m▷\033[0m", message)


def print_error(message):
    print("\033[91mdevbox \033[1m▷\033[0m", message, file=sys.stderr)


def vagrant_shim(vagrant_command=None, *extra_args):
    def f(args):
        nonlocal vagrant_command
        command = ["vagrant"]

        if vagrant_command:
            command.append(vagrant_command)
        elif len(args) > 0:
            command.append(args[0])

        if len(args) > 1:
            command.extend(args[1:])

        if len(extra_args) > 0:
            command.extend(extra_args)

        print_info("running " + shlex.quote(" ".join(command)))

        p = subprocess.run(command, cwd=os.environ["DEVBOX_VAGRANT_DIR"])

        if p.returncode != 0:
            print_error("command exited with {}".format(p.returncode))
            sys.exit(p.returncode)

    return f


def devbox_reset(args):
    vagrant_shim("destroy", "-f")([])
    vagrant_shim("up")([])


def abbrevuser(path):
    return path.replace(os.path.expanduser("~"), "~", 1)


def devbox_edit(args):
    if len(args) != 1:
        print_error("invalid arguments")
        print_usage("edit", "<vhost name>")
        sys.exit(1)

    sites_dir   = os.path.expanduser("~/.local/share/devbox/apache2-sites")
    target_file = os.path.join(sites_dir, "{}.conf".format(args[0]))

    print_info("editing {}".format(abbrevuser(target_file)))
    subprocess.run(["vim", target_file], cwd=sites_dir)

    vagrant_shim("ssh", "--", "sudo", "systemctl", "reload", "apache2")([])


def devbox_version(args):
    print('devbox 0.1')


COMMAND_VAGRANT = Command(vagrant_shim(), "vagrant commands")

COMMAND_TMUX = Command(vagrant_shim("ssh", "--", "-t", "tmux", "new", "-As0"),
                       "create or attach to tmux session 0 in the VM")

COMMAND_EDIT = Command(devbox_edit, "edit a vhost config")

COMMANDS = {
    "vagrant": COMMAND_VAGRANT,
    "vg": Alias(COMMAND_VAGRANT, "vagrant"),
    "v": Alias(COMMAND_VAGRANT, "vagrant"),

    "reset": Command(devbox_reset, "destroy and rebuild the VM"),

    "tmux": COMMAND_TMUX,
    "st": Alias(COMMAND_TMUX, "tmux"),

    "edit": COMMAND_EDIT,
    "e": Alias(COMMAND_EDIT, "e"),

    "version": Command(devbox_version, "display tool version")
}


def print_usage_full():
    print_usage()

    longest_name_len = max([len(name) for name in COMMANDS.keys()])
    row_format = "    {:<" + str(longest_name_len + 4) + "}{}"

    for command_name, command in COMMANDS.items():
        print(row_format.format(command_name, command.short_help), file=sys.stderr)


def print_usage(command="<command>", args="[<arg>...]"):
    print("Usage: devbox", command, args, file=sys.stderr)


def main():
    args = sys.argv[1:]

    if len(args) == 0:
        print_error("missing command")
        print_usage_full()
        sys.exit(1)

    command = args[0]
    command_args = args[1:]

    devbox_bin_path = os.path.abspath(sys.argv[0])
    devbox_dir = os.path.dirname(os.path.dirname(devbox_bin_path))
    devbox_vagrant_dir = os.path.join(devbox_dir, "vagrant")

    os.environ["DEVBOX_DIR"] = devbox_dir
    os.environ["DEVBOX_VAGRANT_DIR"] = devbox_vagrant_dir
  
    try:
        COMMANDS[command].function(command_args)
    except KeyError:
        print_error("unknown command: " + command)
        print_usage()
        sys.exit(1)


main()
