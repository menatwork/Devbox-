#!/bin/bash
set -euo pipefail

_exec_docker() {
  if [[ "$(uname -o)" == Msys ]]; then
    exec winpty docker "$@"
  else
    exec docker "$@"
  fi
}

_default_projects_dir() {
  realpath "$script_dir/../.."
}

_load_dot_env() {
  local env_file="$devbox_repo_dir"/.env

  if [[ -f "$env_file" ]]; then
    . "$env_file"
  fi
}

_main() {
  # Non-configurable directories
  script_dir="$(dirname "$0")"
  devbox_repo_dir="$(realpath "$script_dir"/..)"
  devbox_shell_dir="$devbox_repo_dir"/shell

  _load_dot_env

  # Configurable directories
  devbox_projects_dir="${devbox_projects_dir:-$(_default_projects_dir)}"
  devbox_ssh_dir="$devbox_ssh_dir"

  devbox_image_name=devbox
  devbox_container_name="$devbox_image_name"

  devbox_image_tag="$devbox_image_name":latest

  # Names of Docker volumes for persistent data
  devbox_volume_composer="$devbox_image_name"-composer
  devbox_volume_mysql="$devbox_image_name"-mysql
  devbox_volume_sessions="$devbox_image_name"-sessions

  if [[ $# -lt 1 ]]; then
      print_error "missing command"
      exit 1
  fi

  _scriptname="$1"
  _script="$script_dir/_$1"

  if [[ ! -f "$_script" ]]; then
      devbox_panic "command not found"
  fi

  shift

  . "$_script"
}

devbox_info() {
  if [[ -v _scriptname ]]; then
    printf "\e[1mdevbox %s:\e[0m %s\n" "$_scriptname" "$@"
  else
    printf "\e[1mdevbox:\e[0m %s\n" "$@"
  fi
}

devbox_error() {
  if [[ -v _scriptname ]]; then
    >&2 printf "\e[1;31mdevbox %s:\e[0;31m %s\e[0m\n" "$_scriptname" "$@"
  else
    >&2 printf "\e[1;31mdevbox:\e[0;31m %s\e[0m\n" "$@"
  fi
}

devbox_panic() {
  devbox_error "$@"
  exit 1
}

#
# Translate $PWD to its corresponding path in the devbox container.
#
# This will print an error and exit with status code 1 if $PWD isn't
# in a directory mapped into the container.
#
devbox_pwd_in_container() {
  if [[ ! "$PWD" =~ ^"$devbox_projects_dir" ]]; then
      devbox_panic "you are not in $devbox_projects_dir"
  fi

  echo "/projects/${PWD/#$devbox_projects_dir\/}"
}

_main "$@"
