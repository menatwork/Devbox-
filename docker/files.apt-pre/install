#!/bin/bash
#
# /opt/devbox/install -- setup script for the devbox image
#
set -eu

packages=(
  runit apache2 mariadb-server composer openssh-client git

  # runtime requirement for mod_vhost_devbox
  libyaml-0-2

  # runtime requirement for mailcatcher
  ruby

  # ppa:ondrej/php
  php7.3-fpm php7.3-xml php7.3-curl php7.3-intl php7.3-gd
  php7.3-imagick php7.3-mbstring php7.3-zip php7.3-mysql php7.3-soap
  php7.3-yaml

  php5.6-fpm php5.6-xml php5.6-curl php5.6-intl php5.6-gd
  php5.6-imagick php5.6-mbstring php5.6-zip php5.6-mysql php5.6-soap
  php5.6-mcrypt

  # nodesource & yarn
  nodejs yarn
)

# These packages will be installed, kept around for any builds that
# require them and then removed to keep the image as small as
# possible.
packages_build_deps=(
  # build requirements for mailcatcher
  build-essential ruby-dev libsqlite3-dev

  # build requirements for mod_vhost_devbox
  apache2-dev libyaml-dev
)

# Skip all interactive package configuration
export DEBIAN_FRONTEND=noninteractive

apt-get update -qq
apt-get install -qq --no-install-recommends \
	software-properties-common apt-transport-https gnupg

# Add third-party software sources
# (signing keys are in docker/files.apt-pre/etc/apt/trusted.gpg.d)
echo 'deb https://deb.nodesource.com/node_12.x bionic main' > /etc/apt/sources.list.d/nodesource.list
echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list

apt-add-repository --yes ppa:ondrej/php

# Pull in any package upgrades released since our base image was built
apt-get upgrade --quiet=2

# Install software
apt-get install -qq --no-install-recommends \
	"${packages[@]}" "${packages_build_deps[@]}"

gem install --no-document mailcatcher

make -C /tmp/mod_vhost_devbox install

# Remove build deps and package lists
apt-get purge -qq "${packages_build_deps[@]}"
apt-get autoremove -qq --purge
rm -rf /var/lib/apt/lists/* /tmp/mod_vhost_devbox
